{"version":3,"file":"static/js/51.1fb004f1.chunk.js","mappings":"2MAMA,MAqJA,EArJoBA,KAChB,MAAMC,GAAcC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,UAAUH,cACrDI,GAAeH,EAAAA,EAAAA,KAAaC,GAAUA,EAAME,eAC5CC,GAAYJ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMI,QACzCC,GAAWC,EAAAA,EAAAA,OAEVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,KACpCG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,KAC1CK,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,KAChDO,EAAWC,IAAgBR,EAAAA,EAAAA,WAAS,GAErCS,EAAeA,KACjB,GACIX,EAASY,OAAS,GAClBT,EAAUS,OAAS,GACnBP,EAAaO,OAAS,GACtBL,EAAgBK,OAAS,EAC3B,CAEE,IAAIC,EADJH,GAAa,GAGTG,EADqB,IAArBjB,EAAUgB,OACG,EAEAjB,EAAamB,GACpBnB,EAAamB,GACblB,EAAUA,EAAUgB,OAAS,GAAGE,GAAK,EAE/C,MAAMC,EAAO,CACTD,GAAID,EACJG,KAAMhB,EACNiB,MAAOd,EACPe,SAAUb,EACVc,YAAaZ,QAEGa,IAApBzB,EAAamB,GACPhB,GAASuB,EAAAA,EAAAA,IAAWN,IACpBjB,GAASwB,EAAAA,EAAAA,IAAQP,IACvBQ,GACJ,MACIb,GAAa,EACjB,EAGEa,EAAkBA,KACpBzB,GAAS0B,EAAAA,EAAAA,MACT1B,GAAS2B,EAAAA,EAAAA,OACTxB,EAAY,IACZG,EAAa,IACbE,EAAgB,IAChBE,EAAmB,IACnBE,GAAa,EAAM,EAYvB,OATAgB,EAAAA,EAAAA,YAAU,KACNzB,EAAYN,EAAaqB,KAAOrB,EAAaqB,KAAO,IACpDZ,EAAaT,EAAasB,MAAQtB,EAAasB,MAAQ,IACvDX,EAAgBX,EAAauB,SAAWvB,EAAauB,SAAW,IAChEV,EACIb,EAAawB,YAAcxB,EAAawB,YAAc,GACzD,GACF,CAACxB,IAEAJ,GAEIoC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+GAA8GC,UACzHC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+EAA8EC,SAAA,EACzFF,EAAAA,EAAAA,KAAA,UACII,QAASR,EACTK,UAAU,iCAAgCC,UAE1CF,EAAAA,EAAAA,KAAA,OACIK,IAAI,aACJC,IAAI,gEAGZH,EAAAA,EAAAA,MAAA,QAAMF,UAAU,qCAAoCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,WAAUL,SAAC,YAC1BF,EAAAA,EAAAA,KAAA,SACIQ,KAAK,OACLP,UAAU,+EACVZ,KAAK,WACLF,GAAG,WACHsB,MAAOpC,EACPqC,SAAWC,GAAMrC,EAAYqC,EAAEC,OAAOH,aAG9CN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,YAAWL,SAAC,YAC3BF,EAAAA,EAAAA,KAAA,SACIQ,KAAK,SACLP,UAAU,+EACVZ,KAAK,YACLF,GAAG,YACHsB,MAAOjC,EACPkC,SAAWC,GAAMlC,EAAakC,EAAEC,OAAOH,aAG/CN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,eAAcL,SAAC,eAC9BF,EAAAA,EAAAA,KAAA,SACIQ,KAAK,OACLP,UAAU,+EACVZ,KAAK,eACLF,GAAG,eACHsB,MAAO/B,EACPgC,SAAWC,GACPhC,EAAgBgC,EAAEC,OAAOH,aAIrCN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAA,SAAOO,QAAQ,kBAAiBL,SAAC,kBAGjCF,EAAAA,EAAAA,KAAA,YACIa,KAAK,IACLC,KAAK,KACLb,UAAU,8GACVZ,KAAK,kBACLF,GAAG,kBACHsB,MAAO7B,EACP8B,SAAWC,GACP9B,EAAmB8B,EAAEC,OAAOH,eAK3C3B,IACGkB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBC,SAAC,6DAKxCF,EAAAA,EAAAA,KAAA,UACII,QAASpB,EACTiB,UAAU,gFAA+EC,SAC5F,cAON,IACX,C","sources":["components/AddEditBook.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { togglePopup } from \"../utils/showPopupSlice\";\r\nimport { addBook, updateBook } from \"../utils/booksSlice\";\r\nimport { removeSelectedBook } from \"../utils/selectedBookSlice\";\r\n\r\nconst AddEditBook = () => {\r\n    const isPopupOpen = useSelector((store) => store.showPopup.isPopupOpen);\r\n    const selectedBook = useSelector((store) => store.selectedBook);\r\n    const booksData = useSelector((store) => store.books);\r\n    const dispatch = useDispatch();\r\n\r\n    const [bookName, setBookName] = useState(\"\");\r\n    const [bookPrice, setBookPrice] = useState(\"\");\r\n    const [bookCategory, setBookCategory] = useState(\"\");\r\n    const [bookDescription, setBookDescription] = useState(\"\");\r\n    const [showError, setShowError] = useState(false);\r\n\r\n    const handleOnSave = () => {\r\n        if (\r\n            bookName.length > 0 &&\r\n            bookPrice.length > 0 &&\r\n            bookCategory.length > 0 &&\r\n            bookDescription.length > 0\r\n        ) {\r\n            setShowError(false);\r\n            let currBookId;\r\n            if (booksData.length === 0) {\r\n                currBookId = 1;\r\n            } else {\r\n                currBookId = selectedBook.id\r\n                    ? selectedBook.id\r\n                    : booksData[booksData.length - 1].id + 1;\r\n            }\r\n            const book = {\r\n                id: currBookId,\r\n                name: bookName,\r\n                price: bookPrice,\r\n                category: bookCategory,\r\n                description: bookDescription,\r\n            };\r\n            selectedBook.id !== undefined\r\n                ? dispatch(updateBook(book))\r\n                : dispatch(addBook(book));\r\n            handleHidePopup();\r\n        } else {\r\n            setShowError(true);\r\n        }\r\n    };\r\n\r\n    const handleHidePopup = () => {\r\n        dispatch(togglePopup());\r\n        dispatch(removeSelectedBook());\r\n        setBookName(\"\");\r\n        setBookPrice(\"\");\r\n        setBookCategory(\"\");\r\n        setBookDescription(\"\");\r\n        setShowError(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setBookName(selectedBook.name ? selectedBook.name : \"\");\r\n        setBookPrice(selectedBook.price ? selectedBook.price : \"\");\r\n        setBookCategory(selectedBook.category ? selectedBook.category : \"\");\r\n        setBookDescription(\r\n            selectedBook.description ? selectedBook.description : \"\"\r\n        );\r\n    }, [selectedBook]);\r\n\r\n    if (isPopupOpen) {\r\n        return (\r\n            <div className=\"bg-black bg-opacity-90 absolute top-0 right-0 bottom-0 left-0 flex items-center justify-center flex-col px-4\">\r\n                <div className=\"relative bg-white rounded-lg max-w-lg w-full max-h-96 h-full p-4 text-center\">\r\n                    <button\r\n                        onClick={handleHidePopup}\r\n                        className=\"absolute top-4 right-4 w-4 h-4\"\r\n                    >\r\n                        <img\r\n                            alt=\"close-icon\"\r\n                            src=\"https://img.icons8.com/ios-filled/50/delete-sign--v1.png\"\r\n                        />\r\n                    </button>\r\n                    <form className=\"text-black px-11 pt-9 pb-7 md:px-3\">\r\n                        <div className=\"flex\">\r\n                            <label htmlFor=\"bookname\">Title:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"text-black border border-slate-500 rounded-lg py-1 px-2 ml-5 w-full truncate\"\r\n                                name=\"bookname\"\r\n                                id=\"bookname\"\r\n                                value={bookName}\r\n                                onChange={(e) => setBookName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"my-5 flex\">\r\n                            <label htmlFor=\"bookprice\">Price:</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"text-black border border-slate-500 rounded-lg py-1 px-2 ml-5 w-full truncate\"\r\n                                name=\"bookprice\"\r\n                                id=\"bookprice\"\r\n                                value={bookPrice}\r\n                                onChange={(e) => setBookPrice(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-5 flex\">\r\n                            <label htmlFor=\"bookcategory\">Category:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"text-black border border-slate-500 rounded-lg py-1 px-2 ml-5 w-full truncate\"\r\n                                name=\"bookcategory\"\r\n                                id=\"bookcategory\"\r\n                                value={bookCategory}\r\n                                onChange={(e) =>\r\n                                    setBookCategory(e.target.value)\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex\">\r\n                            <label htmlFor=\"bookdescription\">\r\n                                Description:\r\n                            </label>\r\n                            <textarea\r\n                                rows=\"3\"\r\n                                cols=\"10\"\r\n                                className=\"text-black border border-slate-500 rounded-lg py-1 px-2 ml-5 w-full min-h-[70px] max-h-[70px] overflow-auto\"\r\n                                name=\"bookdescription\"\r\n                                id=\"bookdescription\"\r\n                                value={bookDescription}\r\n                                onChange={(e) =>\r\n                                    setBookDescription(e.target.value)\r\n                                }\r\n                            ></textarea>\r\n                        </div>\r\n                    </form>\r\n                    {showError && (\r\n                        <p className=\"text-xs text-red-500\">\r\n                            Title, Price, Category and Description cannot be\r\n                            blank!\r\n                        </p>\r\n                    )}\r\n                    <button\r\n                        onClick={handleOnSave}\r\n                        className=\"btn rounded-lg px-4 py-2 shadow-lg bg-slate-800 text-white hover:bg-slate-950\"\r\n                    >\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default AddEditBook;\r\n"],"names":["AddEditBook","isPopupOpen","useSelector","store","showPopup","selectedBook","booksData","books","dispatch","useDispatch","bookName","setBookName","useState","bookPrice","setBookPrice","bookCategory","setBookCategory","bookDescription","setBookDescription","showError","setShowError","handleOnSave","length","currBookId","id","book","name","price","category","description","undefined","updateBook","addBook","handleHidePopup","togglePopup","removeSelectedBook","useEffect","_jsx","className","children","_jsxs","onClick","alt","src","htmlFor","type","value","onChange","e","target","rows","cols"],"sourceRoot":""}